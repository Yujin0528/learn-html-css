@import url('/src/common/theme.css');

html,
body {
  font-family: 'SUIT', sans-serif;
}

body *,
body *::before,
body *::after {
  box-sizing: border-box;
}

/* flex 파헤치기  */
/* 플렉스 컨테이너 관련 속성 */
.case-01 {
  display: flex;
  /* flex-direction:row-reverse는 float:right;와 같은 결과 */
  /* flex-direction: row; */

  /* flex container 내 줄바꿈 */
  /* flex-wrap: nowrap; */

  /* 숏핸드 표기법, flex-derection 속성과 flex-wrap 속성을 단축해서 지정 */
  flex-flow: row wrap;
  justify-content: center;
  /* align-items: stretch; 기본값 */
  /* align-items는 flex-flow에 의해 정해진 교차축 기준으로 아이템을 정렬한다. */
  align-items: center;
  align-content: center;
  column-gap: 20px;

  border: 1px solid red;
  /* padding: 10px; */
  inline-size: 622px;
  block-size: 522px;

  [class*='item'] {
    /* margin-block: 10px; */
    border: 1px solid currentColor;
    background: var(--pastel-yellow);
    /* inline-size: 100px; */
    /* block-size: 100px; */
    /* 블록요소가 가진 값을 가운데 정렬 */
    /* align-content: normal-flow에서 flex와 position없이 세로중앙정렬 */
    text-align: center;
    align-content: center;
    /* 기존에 세로 기준 가운데 정렬을 지원하지 않을 때 사용하는 트릭 / line-height로 가운데 정렬하는 건 정확하지 않음 */
    /* line-height: 100px; */
  }

  .item1 {
    /* inline-size: 200px; */
    font-size: 48px;
  }

  .item2 {
    font-size: 30px;
  }
}

.case-02{
    margin-block-start: 50px;
    border: 1px solid green;
    width: 502px;
    /* width를 논리속성으로 */
    inline-size: 502px;
    display: flex;
    flex-flow: row nowrap;

    [class^="item"]{
        border: 1px solid currentColor;
        /* width: 100px;
        inline-size: 100px;
        height: 100px;
        block-size: 100px; */
        text-align: center;
        align-content: center;

        /* 숏핸드, flex:basis grow shrink */
        flex:0 1 200px;
        /* felx박스의 축에 따라 row면 inline-size처럼 동작하고, column이면 block-size처럼 동작한다. */
        /* 디폴트 auto */
        /* :content 는 박스의 콘텐츠 기준으로 크기를 배정 */
        /* :0은 콘텐츠 상관없이 0에서 시작-> 반응형 레이아웃에 유용*/
        flex-basis: 200px; 
        /* flex-grow는 확대한다. 남은 여백을 content에 값기준 균등하게 배분한다 */
        /* 디폴트 0 */
        /* 남는 스페이스 박스(여백) 1/n 해서 나눠줘 */
        flex-grow: 1;
        /* flex-shrink는 축소한다. 부족한 여백을 content에 값기준 균등하게 줄인다 */
        /* 디폴트 1 */
        /* 부족한 스페이스 박스(여백) 1/n 해서 줄여줘 */
        flex-shrink: 1;
        

        /* 자식 요소 중 짝수번째 값 */
        /* &:nth-child(even){
            order: -1;
        } */

        /* 자식 요소 중 홀수번째 값 */
        /* 스페이스 박스(여백) 2/n 해서 나눠줘 */
        &:nth-child(odd){
            order: -1;
            flex-grow: 2;
        }
    }
}