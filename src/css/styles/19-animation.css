@import '/src/common/modern-reset.css';
@import '/src/common/theme.css';
@import '/src/common/a11y.css';
@import '/src/common/base.css';
@import '/src/ui/components/button/button.css';

:root {
  color-scheme: light dark;
}

body {
  margin: 20px;
  background: light-dark(#fff, #000);
  color: light-dark(#000, #fff);
}

.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  grid-auto-rows: 18.75rem;
  gap: 1.25rem;
}

.case {
  border: 1px solid light-dark(#000, #fff);
  padding: 40px;
}

button {
  border-radius: 0.5rem;
  padding: 0.5rem 1em;
}

.toggle-animation {
  background-color: #4263eb;
  color: white;
}

.toggle-animation.paused {
  background-color: #e03131;
}

.reset-animation {
  background-color: #15aabf;
  color: white;
}

.target-animation {
  margin-top: 40px;
  margin-block-start: 2.5rem;
  font-size: 2rem;
  text-align: center;
  align-content: center;
  padding: 10px;
  border-radius: 8px;
  color: #fff;
  background: linear-gradient(135deg, #37b24d, #2b8a3e);
}

/* Fade animation */
@keyframes fade {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.case-01 .target-animation {
  /* animation-name: ; */
  animation-name: fade;
  /* 재생시간 */
  animation-duration: 3s;
  /* 무한재생 */
  animation-iteration-count: infinite;
  /* 애니메이션 방향 - 역순재생*/
  /* animation-direction: alternate; */
  /* 애니메이션 시작 지연시간 */
  animation-delay: 1s;
  /* 애니메이션 지속시간 (linear -> 일정하게 지속) */
  animation-timing-function: linear;
  /* 애니메이션 끝난 후 처리 (backwards-> 시작상태로 돌아옴, forwards -> 끝난상태로 끝 */
  animation-fill-mode: forwards;
  animation-play-state: paused;
}

/* Shrink Animation */
@keyframes shrink {
  0%,
  100% {
    width: 100%;
  }
  50% {
    width: 50%;
  }
}

.case-02 .target-animation {
  animation: shrink 2s infinite ease-in-out both;
  animation-play-state: paused;
}

/* Bounce Animation*/
@keyframes bounce {
  0%,
  100% {
    translate: 0 0;
  }
  50% {
    translate: 0 -30px;
  }
}

.case-03 .target-animation {
  animation: bounce 2s infinite ease-in-out both;
  animation-play-state: paused;
}

/* Shake Animation*/
@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(-15);
  }
}

.case-04 .target-animation {
  animation: shake 2s infinite ease-in-out both;
  animation-play-state: paused;
}

/* Spin Animation */
@keyframes spin {
  0% {
    rotate: 0;
  }
  100% {
    rotate: 360deg;
  }
}
.case-05 .target-animation {
  animation: spin 1.5s infinite linear;
  animation-play-state: paused;
  animation-fill-mode: forwards;
  background: conic-gradient(green, red, green);
  border-radius: 50%;
  width: 150px;
  inline-size: 9.375rem;
  aspect-ratio: 1/1;
}

/* Pulse Animation*/
@keyframes pulse {
  0%,
  100% {
    scale: 1 1;
  }
  50% {
    scale: 1.1 1.1;
  }
}

.case-06 .target-animation {
  animation: pulse 2s infinite ease-in-out both;
  animation-play-state: paused;
}

/* Flip Animation*/
/* perspective : 원근감 */
@keyframes flip {
  0% {
    transform: perspective(400px) rotateY(0);
  }
  100% {
    transform: perspective(400px) rotateY(360deg);
  }
}

.case-07 .target-animation {
  animation: flip 2s infinite ease-in-out both;
  animation-play-state: paused;
}

/* Wobble Animation */
@keyframes wobble {
  0%,
  100% {
    transform: translateX(0%) rotate(0deg);
  }
  15% {
    transform: translateX(-15px) rotate(-5deg);
  }
  30% {
    transform: translateX(10px) rotate(3deg);
  }
  45% {
    transform: translateX(-10px) rotate(-3deg);
  }
  60% {
    transform: translateX(5px) rotate(2deg);
  }
  75% {
    transform: translateX(-5px) rotate(-1deg);
  }
}
.case-08 .target-animation {
  animation: wobble 2s infinite ease-in-out;
  animation-play-state: paused;
}

/* Glow Animation */
@keyframes glow {
  0%, 100% {
      box-shadow: 0 0 5px light-dark(rgb(0 0 0 /0.5), rgb(255 255 255 /0.5));
  }
  50% {
      box-shadow: 0 0 10px light-dark(rgb(0 0 0 /0.6), rgb(255 255 255 /0.6));
  }
}
.case-09 .target-animation {
  animation: glow 2s infinite ease-in-out;
  animation-play-state: paused;
}

/* Rotate Animation */
@property --rotation{
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}

@keyframes rotate {
  from {
    --rotation: 0deg;
  }
  to {
    --rotation: 360deg;
  }
}
.case-10 .target-animation {
  width: 150px;
  aspect-ratio: 1/1;
  position: relative;

  &::before,
  &::after {
    --rotation: 0deg;
    box-sizing: content-box;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    inset: 50%;
    translate: -50% -50%;
    background: conic-gradient(from var(--rotation), red, blue, red);
    padding: 1px;
    z-index: -1;
    border-radius: 8px;
    animation: rotate 1s infinite linear;
    animation-play-state: paused;
  }

  &::before {
    filter: blur(15px);
  }
}
